Анализ проведён с помощью утилиты jconsole.

В профиле было прописано +UseSimpleGC. Т.е. я использовал самый простой Garbage Collector.
Представленно 3 графика. Eden, Survivor и OldGen. Они наглядно показывают как заполнялся Heap нашими Item. Если
сопоставить графики, то видно, что GC запускался в 14-44-30 впервый раз из-за переполнения Eden. В этот момент из eden
удалились все объекты, на которые не оказалось ссылок. А те объекты, на которых остались ссылки перешли в survivor.
Некоторые объекты (скорее всего это были не Item) попали в OldGen.
В 12-46 был следующий запуск GC, это я связываю с тем, что я запустил в трэкере showAllItem. Видно, что из survivor
объекты перешли в OldGen.
В 12-47-50 из-за переполнения Eden вызвался третий по счёту GC. Объекты перешли в survivor и oldGen.


Чтобы добиться состояния выхода за пределы памяти можно прописать -Xms10m -Xmx50m. Это значит, что минимум программе
выделено 10 мБ, а миксимум 50 мБ. Запустив программу с такими параметрами, можно достичь java.lang.OutOfMemoryError, что
и показано на скриншоте OutOfMemory.